generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model LoginActivity {
  id         String   @id @default(uuid())
  email   String   // Username attempted
  ipAddress  String   // IP address of the request
  device     String   // Browser and OS info
  status     Status   // Enum: SUCCESS | FAILED | SUSPICIOUS
  timestamp  DateTime @default(now())
}

enum Status {
  SUCCESS
  FAILED
  SUSPICIOUS
}


model KnowldgeBase {
  id        String   @id @default(uuid())
  question  String
  answer    String
  createdAt DateTime @default(now()) @map("created_at")  // Mapping to snake_case column name
  vector Unsupported("vector(1024)")?
}

model Admin {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      Role     @default(SUPER_ADMIN)
  createdAt DateTime @default(now())
}

model VisitorAccount {
  firstName String?
  lastName  String?
  phone     String?   @unique
  email     String    @unique
  password  String?
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  id        String    @id @default(uuid())
  bookings  Booking[]
}

model Room {
  id          String     @id @default(uuid())
  roomNumber  String     @unique
  type        RoomType
  price       Float      @default(0)
  createdAt   DateTime   @default(now())
  amenities   Amenity[]
  capacity    Int        @default(1)
  description String?
  status      RoomStatus @default(AVAILABLE)
  bookings    Booking[]
}

model Booking {
  id               String          @id @default(uuid())
  fullName         String
  email            String
  phone            String?
  adults           Int
  kids             Int
  specialRequest   String?
  roomType         RoomType
  roomPrice        Float
  roomId           String
  checkIn          DateTime
  checkOut         DateTime
  paymentMethod    PaymentMethod   @default(CASH)  // Add a default value here
  createdAt        DateTime        @default(now())
  visitorAccountId String?
  status           BookingStatus   @default(PENDING)
  room             Room            @relation(fields: [roomId], references: [id])
  visitorAccount   VisitorAccount? @relation(fields: [visitorAccountId], references: [id])
}

enum Role {
  SUPER_ADMIN
  MODERATOR
}

enum RoomType {
  STANDARD
  DELUXE
  SUITE
}

enum RoomStatus {
  AVAILABLE
  BOOKED
  MAINTENANCE
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  CHECKED_OUT
  CANCELLED
}

enum Amenity {
  WIFI
  TV
  AC
  MINI_BAR
  JACUZZI
}
enum PaymentMethod {
  CASH
  MPESA
  BANK_TRANSFER
}

